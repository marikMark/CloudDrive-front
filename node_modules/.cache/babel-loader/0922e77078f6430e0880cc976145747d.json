{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/loadingFile/LoadingFile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './loadingFile.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingFile = ({\n  file\n}) => {\n  _s();\n\n  const files = useSelector(state => state.files.files);\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'jpg' ? picture : file.type === 'jpeg' ? picture : file.type === 'zip' ? zipFile : file.type === 'mp3' ? mp3 : txtFile;\n  useEffect(() => {\n    file.progress = none;\n  }, [files]);\n  return file.progress !== none && /*#__PURE__*/_jsxDEV(\"div\", {\n    tabIndex: 1,\n    className: \"LoadingFile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-name\",\n      style: {\n        pointerEvents: 'none'\n      },\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-date\",\n      style: {\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-size\",\n      style: {\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoadingFile-progress_bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LoadingFile-progress\",\n        style: {\n          width: file.progress\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoadingFile, \"XRTHjD4SWdxvuwYepkzt7ej2Rq0=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoadingFile;\nexport default LoadingFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingFile\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/loadingFile/LoadingFile.js"],"names":["React","useEffect","useSelector","folder","doc","pdf","picture","zipFile","txtFile","mp3","LoadingFile","file","files","state","type","progress","none","pointerEvents","name","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,mBAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC5B,QAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;AACA,QAAME,IAAI,GACEH,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBX,MAAtB,GACAQ,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBV,GAAtB,GACAO,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBT,GAAtB,GACAM,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBR,OAAtB,GACAK,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBR,OAAtB,GACAK,IAAI,CAACG,IAAL,KAAc,MAAd,GAAuBR,OAAvB,GACAK,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBP,OAAtB,GACAI,IAAI,CAACG,IAAL,KAAc,KAAd,GAAsBL,GAAtB,GACAD,OATZ;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,IAAI,CAACI,QAAL,GAAgBC,IAAhB;AACH,GAFQ,EAEN,CAACJ,KAAD,CAFM,CAAT;AAGA,SAASD,IAAI,CAACI,QAAL,KAAkBC,IAAlB,iBACL;AACI,IAAA,QAAQ,EAAE,CADd;AAEI,IAAA,SAAS,EAAC,uBAFd;AAAA,4BAKI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAA1C;AAAA,gBAAoEN,IAAI,CAACO;AAAzE;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACD,QAAAA,aAAa,EAAE;AAAhB;AAA1C;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACA,QAAAA,aAAa,EAAE;AAAhB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAPJ,eAUI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAsC,QAAA,KAAK,EAAE;AAACE,UAAAA,KAAK,EAAER,IAAI,CAACI;AAAb;AAA7C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA/BD;;GAAML,W;UACYR,W;;;KADZQ,W;AAiCN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport './loadingFile.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png'\n\nconst LoadingFile = ({file}) => {\n    const files = useSelector(state => state.files.files);\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'jpg' ? picture :\n                file.type === 'jpeg' ? picture :\n                file.type === 'zip' ? zipFile :\n                file.type === 'mp3' ? mp3 :\n                txtFile;\n    useEffect(() => {\n        file.progress = none;\n    }, [files]);\n    return ( file.progress !== none &&\n        <div\n            tabIndex={1}\n            className='LoadingFile-container'\n        >\n            {/* <img className='LoadingFile-img' style={{pointerEvents: 'none'}} src={type} alt='' /> */}\n            <span className='LoadingFile-name' style={{pointerEvents: 'none'}}>{file.name}</span>\n            <span className='LoadingFile-date' style={{pointerEvents: 'none'}}></span>\n            <span className='LoadingFile-size' style={{pointerEvents: 'none'}}>{\n                // file.size === 0 ? 'â€”' : sizeFormat(file.size)\n            }</span>\n            <div className='LoadingFile-progress_bar'>\n                <div className='LoadingFile-progress' style={{width: file.progress}}></div>\n            </div>\n        </div>\n    )\n}\n\nexport default LoadingFile;"]},"metadata":{},"sourceType":"module"}