{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/Popup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createDir } from '../../actions/file';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Popup = () => {\n  _s();\n\n  const [dirName, setDirName] = useState('');\n  const dispatch = useDispatch();\n  const userId = useSelector(state => state.user.currentUser.userId);\n  let currentDir = useSelector(state => state.files.currentDir);\n  currentDir = currentDir === null ? userId : currentDir;\n\n  function createDirHandler() {\n    const result = dispatch(createDir(currentDir, dirName));\n    console.log(result.data);\n\n    if (result === 'dirExist') {\n      alert('File already exist!');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade\",\n      id: \"createDirModal\",\n      tabIndex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"createDirModalLabel\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        role: \"document\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              id: \"createDirModalLabel\",\n              children: \"Create Directory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"close\",\n              \"data-dismiss\": \"modal\",\n              \"aria-label\": \"Close\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                \"aria-hidden\": \"true\",\n                children: \"\\xD7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: dirName,\n              onChange: e => setDirName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\",\n              \"data-dismiss\": \"modal\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-primary\",\n              onClick: () => createDirHandler(),\n              children: \"Save changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Popup, \"aq1iaQrlDm69bScu2CFc3wvznhc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Popup;\nexport default Popup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Popup\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/Popup.js"],"names":["React","useState","useDispatch","useSelector","createDir","Popup","dirName","setDirName","dispatch","userId","state","user","currentUser","currentDir","files","createDirHandler","result","console","log","data","alert","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createDir } from '../../actions/file';\n\nconst Popup = () => {\n    const [dirName, setDirName] = useState('');\n    const dispatch = useDispatch();\n    const userId = useSelector(state => state.user.currentUser.userId);\n    let currentDir = useSelector(state => state.files.currentDir);\n    currentDir = currentDir === null ? userId : currentDir;\n    function createDirHandler() {\n        const result = dispatch(createDir(currentDir, dirName));\n        console.log(result.data);\n        if(result === 'dirExist') {\n            alert('File already exist!');\n        }\n    }\n    return (\n        <>\n            <div className=\"modal fade\" id=\"createDirModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"createDirModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"createDirModalLabel\">Create Directory</h5>\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                        </div>\n                        <div className=\"modal-body\">\n                            <input type='text' value={dirName} onChange={(e) => setDirName(e.target.value)} />\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                            <button\n                            type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={() => createDirHandler()}\n                            >Save changes</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Popup;"]},"metadata":{},"sourceType":"module"}