{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { updateFilePath } from '../../../../actions/file';\nimport Dropdown from './Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = props => {\n  _s();\n\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'jpg' ? picture : file.type === 'jpeg' ? picture : file.type === 'zip' ? zipFile : file.type === 'mp3' ? mp3 : txtFile;\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const draggingFile = useSelector(state => state.files.draggingFile);\n\n  function openDirHandler(file) {\n    if (file.type === 'dir') {\n      dispatch(pushToStack(currentDir));\n      dispatch(setCurrentDir(file._id));\n    } // localStorage.setItem('currentDirId', file._id);\n\n  }\n\n  const focusHandler = e => {\n    e.target.className = 'File-container-hover';\n  };\n\n  const blurHandler = e => {\n    e.target.className = 'File-container';\n    setOpacity(0);\n    setDropDown(false);\n  };\n\n  const [dropDown, setDropDown] = useState(false);\n  const [X, setX] = useState(),\n        [Y, setY] = useState();\n  const [opacity, setOpacity] = useState(0);\n\n  const contextMenuHandler = e => {\n    e.preventDefault();\n    setDropDown(true);\n    setX(e.clientX);\n    setY(e.clientY);\n    var op = 0;\n    setTimeout(function func() {\n      if (op > 1) return;\n      setOpacity(op);\n      op += 0.5;\n      setTimeout(func, 60);\n    }, 60);\n  };\n\n  const dragStartHandler = (e, file) => {\n    dispatch(setDraggingFile(file));\n  };\n\n  const dragLeaveHandler = e => {\n    e.target.className = 'File-container';\n  };\n\n  const dragEndHandler = e => {\n    e.target.className = 'File-container';\n  };\n\n  const dragOverHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      e.target.className = 'File-container-hover';\n    }\n  };\n\n  const dropHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      dispatch(updateFilePath(draggingFile, file));\n      dispatch(setDraggingFile(null));\n      e.target.className = 'File-container';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    tabIndex: 1,\n    className: \"File-container\",\n    onFocus: e => focusHandler(e),\n    onBlur: e => blurHandler(e),\n    onContextMenu: e => contextMenuHandler(e),\n    onDoubleClick: () => openDirHandler(file),\n    onDragStart: e => dragStartHandler(e, file),\n    onDragLeave: e => dragLeaveHandler(e),\n    onDragEnd: e => dragEndHandler(e),\n    onDragOver: e => dragOverHandler(e, file),\n    onDrop: e => dropHandler(e, file),\n    draggable: true,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: key,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"File-img\",\n      style: {\n        pointerEvents: 'none'\n      },\n      src: type,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-name\",\n      style: {\n        pointerEvents: 'none'\n      },\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-date\",\n      style: {\n        pointerEvents: 'none'\n      },\n      children: file.updatedAt.split('T')[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-size\",\n      style: {\n        pointerEvents: 'none'\n      },\n      children: file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), dropDown && /*#__PURE__*/_jsxDEV(Dropdown, {\n      X: X,\n      Y: Y,\n      opacity: opacity,\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"rE66CWQgj9Tp6NRUoAwHKC97x9Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","txtFile","mp3","useDispatch","useSelector","useState","setCurrentDir","pushToStack","setDraggingFile","removeFromFiles","updateFilePath","Dropdown","File","props","type","file","dispatch","currentDir","state","files","draggingFile","openDirHandler","_id","focusHandler","e","target","className","blurHandler","setOpacity","setDropDown","dropDown","X","setX","Y","setY","opacity","contextMenuHandler","preventDefault","clientX","clientY","op","setTimeout","func","dragStartHandler","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","key","display","pointerEvents","name","updatedAt","split","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { updateFilePath } from '../../../../actions/file';\nimport Dropdown from './Dropdown';\n\nconst File = (props) => {\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'jpg' ? picture :\n                file.type === 'jpeg' ? picture :\n                file.type === 'zip' ? zipFile :\n                file.type === 'mp3' ? mp3 :\n                txtFile;\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    const draggingFile = useSelector(state => state.files.draggingFile);\n    function openDirHandler(file) {\n        if(file.type === 'dir') {\n            dispatch(pushToStack(currentDir));\n            dispatch(setCurrentDir(file._id));\n        }\n        // localStorage.setItem('currentDirId', file._id);\n    }\n    const focusHandler = e => {\n        e.target.className = 'File-container-hover';\n    }\n    const blurHandler = e => {\n        e.target.className = 'File-container';\n        setOpacity(0);\n        setDropDown(false);\n    }\n    const [dropDown, setDropDown] = useState(false);\n    const [X, setX] = useState(), [Y, setY] = useState();\n    const [opacity, setOpacity] = useState(0);\n    const contextMenuHandler = e => {\n        e.preventDefault();\n        setDropDown(true);\n        setX(e.clientX);\n        setY(e.clientY);\n        var op = 0;\n        setTimeout(function func() {\n            if (op > 1)\n                return;\n            setOpacity(op);\n            op += 0.5;\n            setTimeout(func, 60);\n        }, 60);\n    }\n    const dragStartHandler = (e, file) => {\n        dispatch(setDraggingFile(file));\n    }\n    const dragLeaveHandler = e => {\n        e.target.className = 'File-container';\n    }\n    const dragEndHandler = e => {\n        e.target.className = 'File-container';\n    }\n    const dragOverHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            e.target.className = 'File-container-hover';\n        }\n    }\n    const dropHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            dispatch(updateFilePath(draggingFile, file));\n            dispatch(setDraggingFile(null));\n            e.target.className = 'File-container';\n        }\n    }\n    return (\n        <div\n            tabIndex={1}\n            className='File-container'\n            onFocus={(e) => focusHandler(e)}\n            onBlur={(e) => blurHandler(e)}\n            onContextMenu={e => contextMenuHandler(e)}\n            onDoubleClick={() => openDirHandler(file)}\n            onDragStart={e => dragStartHandler(e, file)}\n            onDragLeave={e => dragLeaveHandler(e)}\n            onDragEnd={e => dragEndHandler(e)}\n            onDragOver={e => dragOverHandler(e, file)}\n            onDrop={e => dropHandler(e, file)}\n            draggable={true}\n        >\n            <input id={key} style={{display: 'none'}} />\n            {/* <div className='File-section'></div> */}\n            <img className='File-img' style={{pointerEvents: 'none'}} src={type} alt='' />\n            <span className='File-name' style={{pointerEvents: 'none'}}>{file.name}</span>\n            <span className='File-date' style={{pointerEvents: 'none'}}>{file.updatedAt.split('T')[0]}</span>\n            <span className='File-size' style={{pointerEvents: 'none'}}>{file.size}</span>\n            {dropDown &&\n                <Dropdown X={X} Y={Y} opacity={opacity} file={file} />\n            }\n        </div>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}