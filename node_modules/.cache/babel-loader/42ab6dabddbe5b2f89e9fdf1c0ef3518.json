{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\";\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport file from '../../../../assets/file.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = ({\n  file\n}) => {\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'picture' ? picture : file.type === 'zip' ? zipFile : file;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"File-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"File-img\",\n      src: file.type === 'dir' ? folder : logo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-name\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-date\",\n      children: file.updatedAt.split('T')[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-size\",\n      children: file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","file","File","type","logo","name","updatedAt","split","size"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAY;AACrB,QAAME,IAAI,GACEF,IAAI,CAACE,IAAL,KAAc,KAAd,GAAsBP,MAAtB,GACAK,IAAI,CAACE,IAAL,KAAc,KAAd,GAAsBN,GAAtB,GACAI,IAAI,CAACE,IAAL,KAAc,KAAd,GAAsBL,GAAtB,GACAG,IAAI,CAACE,IAAL,KAAc,SAAd,GAA0BJ,OAA1B,GACAE,IAAI,CAACE,IAAL,KAAc,KAAd,GAAsBH,OAAtB,GACAC,IANZ;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEA,IAAI,CAACE,IAAL,KAAc,KAAd,GAAsBP,MAAtB,GAA+BQ,IAA9D;AAAoE,MAAA,GAAG,EAAC;AAAxE;AAAA;AAAA;AAAA;AAAA,YADJ,EACkF,GADlF,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BH,IAAI,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAEmD,GAFnD,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BJ,IAAI,CAACK,SAAL,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,EAGsE,GAHtE,eAII;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BN,IAAI,CAACO;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAhBD;;KAAMN,I;AAkBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport file from '../../../../assets/file.png';\n\nconst File = ({file}) => {\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'picture' ? picture :\n                file.type === 'zip' ? zipFile :\n                file\n    return (\n        <div className='File-container'>\n            <img className='File-img' src={file.type === 'dir' ? folder : logo} alt='' />{' '}\n            <span className='File-name'>{file.name}</span>{' '}\n            <span className='File-date'>{file.updatedAt.split('T')[0]}</span>{' '}\n            <span className='File-size'>{file.size}</span>\n        </div>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}