{"ast":null,"code":"const SET_FILES = 'SET_FILES';\nconst SET_CURRENT_DIR = 'SET_CURRENT_DIR';\nconst ADD_FOLDER = 'ADD_FOLDER';\nconst PUSH_TO_STACK = 'PUSH_TO_STACK';\nconst POP_TO_STACK = 'POP_TO_STACK';\nconst SET_DRAGGING_FILE = 'SET_DRAGGING_FILE';\nconst REMOVE_FROM_FILES = 'REMOVE_FROM_FILES';\nconst defaultState = {\n  files: [],\n  currentDir: null,\n  dirStack: [],\n  draggingFile: null\n};\nexport default function fileReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_FILES:\n      return { ...state,\n        files: action.payload\n      };\n\n    case SET_CURRENT_DIR:\n      return { ...state,\n        currentDir: action.payload\n      };\n\n    case ADD_FOLDER:\n      return { ...state,\n        files: [...state.files, action.payload]\n      };\n\n    case PUSH_TO_STACK:\n      return { ...state,\n        dirStack: [...state.dirStack, action.payload]\n      };\n\n    case SET_DRAGGING_FILE:\n      return { ...state,\n        draggingFile: action.payload\n      };\n\n    case REMOVE_FROM_FILES:\n      const index = indexOf(action.payload);\n      return { ...state,\n        files: files.splice(index, 1)\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setFiles = files => {\n  return {\n    type: SET_FILES,\n    payload: files\n  };\n};\nexport const setCurrentDir = dir => {\n  return {\n    type: SET_CURRENT_DIR,\n    payload: dir\n  };\n};\nexport const addFile = dir => {\n  return {\n    type: ADD_FOLDER,\n    payload: dir\n  };\n};\nexport const pushToStack = dir => {\n  return {\n    type: PUSH_TO_STACK,\n    payload: dir\n  };\n};\nexport const setDraggingFile = file => {\n  return {\n    type: SET_DRAGGING_FILE,\n    payload: file\n  };\n};\nexport const removeFromFiles = file => {\n  return {\n    type: REMOVE_FROM_FILES,\n    payload: file\n  };\n};","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/reducers/fileReducer.js"],"names":["SET_FILES","SET_CURRENT_DIR","ADD_FOLDER","PUSH_TO_STACK","POP_TO_STACK","SET_DRAGGING_FILE","REMOVE_FROM_FILES","defaultState","files","currentDir","dirStack","draggingFile","fileReducer","state","action","type","payload","index","indexOf","splice","setFiles","setCurrentDir","dir","addFile","pushToStack","setDraggingFile","file","removeFromFiles"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,UAAU,EAAE,IAFK;AAGjBC,EAAAA,QAAQ,EAAE,EAHO;AAIjBC,EAAAA,YAAY,EAAE;AAJG,CAArB;AAOA,eAAe,SAASC,WAAT,CAAqBC,KAAK,GAAGN,YAA7B,EAA2CO,MAA3C,EAAmD;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKf,SAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACE;AAFX,OAAP;;AAIJ,SAAKf,eAAL;AACI,aAAO,EACH,GAAGY,KADA;AAEHJ,QAAAA,UAAU,EAAEK,MAAM,CAACE;AAFhB,OAAP;;AAIJ,SAAKd,UAAL;AACI,aAAO,EACH,GAAGW,KADA;AAEHL,QAAAA,KAAK,EAAE,CACH,GAAGK,KAAK,CAACL,KADN,EAEHM,MAAM,CAACE,OAFJ;AAFJ,OAAP;;AAOJ,SAAKb,aAAL;AACI,aAAO,EACH,GAAGU,KADA;AAEHH,QAAAA,QAAQ,EAAE,CAAC,GAAGG,KAAK,CAACH,QAAV,EAAoBI,MAAM,CAACE,OAA3B;AAFP,OAAP;;AAIJ,SAAKX,iBAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHF,QAAAA,YAAY,EAAEG,MAAM,CAACE;AAFlB,OAAP;;AAIJ,SAAKV,iBAAL;AACI,YAAMW,KAAK,GAAGC,OAAO,CAACJ,MAAM,CAACE,OAAR,CAArB;AACA,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,KAAK,EAAEA,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAoB,CAApB;AAFJ,OAAP;;AAIJ;AACI,aAAOJ,KAAP;AApCR;AAsCH;AAED,OAAO,MAAMO,QAAQ,GAAGZ,KAAK,IAAI;AAC7B,SAAO;AACHO,IAAAA,IAAI,EAAEf,SADH;AAEHgB,IAAAA,OAAO,EAAER;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMa,aAAa,GAAGC,GAAG,IAAI;AAChC,SAAO;AACHP,IAAAA,IAAI,EAAEd,eADH;AAEHe,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,OAAO,GAAGD,GAAG,IAAI;AAC1B,SAAO;AACHP,IAAAA,IAAI,EAAEb,UADH;AAEHc,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAME,WAAW,GAAGF,GAAG,IAAI;AAC9B,SAAO;AACHP,IAAAA,IAAI,EAAEZ,aADH;AAEHa,IAAAA,OAAO,EAAEM;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMG,eAAe,GAAGC,IAAI,IAAI;AACnC,SAAO;AACHX,IAAAA,IAAI,EAAEV,iBADH;AAEHW,IAAAA,OAAO,EAAEU;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,eAAe,GAAGD,IAAI,IAAI;AACnC,SAAO;AACHX,IAAAA,IAAI,EAAET,iBADH;AAEHU,IAAAA,OAAO,EAAEU;AAFN,GAAP;AAIH,CALM","sourcesContent":["const SET_FILES = 'SET_FILES';\nconst SET_CURRENT_DIR = 'SET_CURRENT_DIR';\nconst ADD_FOLDER = 'ADD_FOLDER';\nconst PUSH_TO_STACK = 'PUSH_TO_STACK';\nconst POP_TO_STACK = 'POP_TO_STACK';\nconst SET_DRAGGING_FILE = 'SET_DRAGGING_FILE';\nconst REMOVE_FROM_FILES = 'REMOVE_FROM_FILES';\n\nconst defaultState = {\n    files: [],\n    currentDir: null,\n    dirStack: [],\n    draggingFile: null\n}\n\nexport default function fileReducer(state = defaultState, action) {\n    switch(action.type) {\n        case SET_FILES:\n            return {\n                ...state,\n                files: action.payload\n            }\n        case SET_CURRENT_DIR:\n            return {\n                ...state,\n                currentDir: action.payload\n            }\n        case ADD_FOLDER:\n            return {\n                ...state,\n                files: [\n                    ...state.files,\n                    action.payload\n                ]\n            }\n        case PUSH_TO_STACK:\n            return {\n                ...state,\n                dirStack: [...state.dirStack, action.payload]\n            }\n        case SET_DRAGGING_FILE:\n            return {\n                ...state,\n                draggingFile: action.payload\n            }\n        case REMOVE_FROM_FILES:\n            const index = indexOf(action.payload);\n            return {\n                ...state,\n                files: files.splice(index, 1)\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setFiles = files => {\n    return {\n        type: SET_FILES,\n        payload: files\n    }\n}\nexport const setCurrentDir = dir => {\n    return {\n        type: SET_CURRENT_DIR,\n        payload: dir\n    }\n}\nexport const addFile = dir => {\n    return {\n        type: ADD_FOLDER,\n        payload: dir\n    }\n}\nexport const pushToStack = dir => {\n    return {\n        type: PUSH_TO_STACK,\n        payload: dir\n    }\n}\nexport const setDraggingFile = file => {\n    return {\n        type: SET_DRAGGING_FILE,\n        payload: file\n    }\n}\nexport const removeFromFiles = file => {\n    return {\n        type: REMOVE_FROM_FILES,\n        payload: file\n    }\n}"]},"metadata":{},"sourceType":"module"}