{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/Disk.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { createDir, getFiles, uploadFile } from '../../actions/file';\nimport FileList from './fileList/FileList';\nimport './disk.css';\nimport 'bootstrap';\nimport uploadFileLogo from '../../assets/upload-file.png';\nimport uploadFolderLogo from '../../assets/upload-folder.png';\nimport createFolderLogo from '../../assets/create-folder.png';\nimport Popup from './Popup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Disk = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  useEffect(() => {\n    // const currentDirId = localStorage.getItem('currentDirId') || currentDir;\n    dispatch(getFiles(currentDir));\n  }, [currentDir]);\n\n  function fileUploadHandler(e) {\n    const files = [...e.target.files];\n    files.forEach(file => dispatch(uploadFile(file, currentDir)));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Disk-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Disk-btns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\",\n          className: \"Disk-create-btn\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dropdown-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            \"data-toggle\": \"modal\",\n            class: \"dropdown-item\",\n            \"data-target\": \"#exampleModal\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: createFolderLogo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), \"Folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"dropdown-divider\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            class: \"dropdown-item\",\n            htmlFor: \"Disk-upload_file\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: uploadFileLogo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), \"File upload\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"Disk-upload_file\",\n            className: \"Disk-upload_file\",\n            multiple: true,\n            onChange: e => fileUploadHandler(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"dropdown-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: uploadFolderLogo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), \"Folder upload\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Disk, \"oerq/nPFQqJSGND+trM3VI9XlZc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Disk;\nexport default Disk;\n\nvar _c;\n\n$RefreshReg$(_c, \"Disk\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/Disk.js"],"names":["useEffect","useDispatch","useSelector","createDir","getFiles","uploadFile","FileList","uploadFileLogo","uploadFolderLogo","createFolderLogo","Popup","Disk","dispatch","currentDir","state","files","fileUploadHandler","e","target","forEach","file"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,oBAAhD;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAO,YAAP;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,UAAU,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,UAAtB,CAA9B;AACAb,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAY,IAAAA,QAAQ,CAACR,QAAQ,CAACS,UAAD,CAAT,CAAR;AACH,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT;;AAIA,WAASG,iBAAT,CAA2BC,CAA3B,EAA8B;AAC1B,UAAMF,KAAK,GAAG,CAAC,GAAGE,CAAC,CAACC,MAAF,CAASH,KAAb,CAAd;AACAA,IAAAA,KAAK,CAACI,OAAN,CAAcC,IAAI,IAAIR,QAAQ,CAACP,UAAU,CAACe,IAAD,EAAOP,UAAP,CAAX,CAA9B;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA,gCACI;AACA,yBAAY,UADZ;AAEA,2BAAc,MAFd;AAGA,2BAAc,OAHd;AAIA,UAAA,SAAS,EAAC,iBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI;AAAK,UAAA,KAAK,EAAC,eAAX;AAAA,kCACI;AAAQ,2BAAY,OAApB;AAA4B,YAAA,KAAK,EAAC,eAAlC;AAAkD,2BAAY,eAA9D;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEJ,gBAAV;AAA4B,cAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAO,YAAA,KAAK,EAAC,eAAb;AAA6B,YAAA,OAAO,EAAC,kBAArC;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEF,cAAV;AAA0B,cAAA,GAAG,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAUI;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,EAAE,EAAC,kBAFP;AAGI,YAAA,SAAS,EAAC,kBAHd;AAII,YAAA,QAAQ,EAAE,IAJd;AAKI,YAAA,QAAQ,EAAGU,CAAD,IAAOD,iBAAiB,CAACC,CAAD;AALtC;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAiBI;AAAQ,YAAA,KAAK,EAAC,eAAd;AAAA,oCACI;AAAK,cAAA,GAAG,EAAET,gBAAV;AAA4B,cAAA,GAAG,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAiCI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAjCJ,eAkCI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CAjDD;;GAAMG,I;UACeV,W,EACEC,W;;;KAFjBS,I;AAmDN,eAAeA,IAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { createDir, getFiles, uploadFile } from '../../actions/file';\nimport FileList from './fileList/FileList';\nimport './disk.css';\nimport 'bootstrap';\nimport uploadFileLogo from '../../assets/upload-file.png';\nimport uploadFolderLogo from '../../assets/upload-folder.png';\nimport createFolderLogo from '../../assets/create-folder.png';\nimport Popup from './Popup';\n\nconst Disk = () => {\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    useEffect(() => {\n        // const currentDirId = localStorage.getItem('currentDirId') || currentDir;\n        dispatch(getFiles(currentDir));\n    }, [currentDir]);\n    function fileUploadHandler(e) {\n        const files = [...e.target.files];\n        files.forEach(file => dispatch(uploadFile(file, currentDir)));\n    }\n    return (\n        <div className='Disk-container'>\n            <div className='Disk-btns'>\n                <div class=\"btn-group\">\n                    <button\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                    className='Disk-create-btn'\n                    >New</button>\n                    <div class=\"dropdown-menu\">\n                        <button data-toggle='modal' class=\"dropdown-item\" data-target=\"#exampleModal\">\n                            <img src={createFolderLogo} alt='' />\n                            Folder\n                        </button>\n                        <div class=\"dropdown-divider\"></div>\n                        <label class=\"dropdown-item\" htmlFor='Disk-upload_file'>\n                            <img src={uploadFileLogo} alt='' />\n                            File upload\n                        </label>\n                        <input\n                            type='file'\n                            id='Disk-upload_file'\n                            className='Disk-upload_file'\n                            multiple={true}\n                            onChange={(e) => fileUploadHandler(e)}\n                            />\n                        <button class=\"dropdown-item\">\n                            <img src={uploadFolderLogo} alt='' />\n                            Folder upload\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <FileList />\n            <Popup />\n        </div>\n    );\n}\n\nexport default Disk;"]},"metadata":{},"sourceType":"module"}