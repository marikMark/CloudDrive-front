{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/loadingFile/LoadingFile.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoadingFile = () => {\n  const files = [{\n    name: '1',\n    type: 'dir'\n  }, {\n    name: '2',\n    type: 'png'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    tabIndex: 1,\n    className: \"LoadingFile-container\" // onFocus={(e) => focusHandler(e, file)}\n    // onBlur={(e) => blurHandler(e)}\n    // onContextMenu={e => contextMenuHandler(e)}\n    // onDoubleClick={() => doubleClickHandler(file)}\n    // onDragStart={e => dragStartHandler(e, file)}\n    // onDragLeave={e => dragLeaveHandler(e)}\n    // onDragEnd={e => dragEndHandler(e)}\n    // onDragOver={e => dragOverHandler(e, file)}\n    // onDrop={e => dropHandler(e, file)}\n    // draggable={true}\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"LoadingFile-img\",\n      style: {\n        pointerEvents: 'none'\n      },\n      src: type,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-name\",\n      style: {\n        pointerEvents: 'none'\n      },\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-date\",\n      style: {\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingFile-size\",\n      style: {\n        pointerEvents: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoadingFile;\nexport default LoadingFile;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoadingFile\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/loadingFile/LoadingFile.js"],"names":["React","LoadingFile","files","name","type","pointerEvents","file"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACtB,QAAMC,KAAK,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAAD,EAA2B;AAACD,IAAAA,IAAI,EAAE,GAAP;AAAYC,IAAAA,IAAI,EAAE;AAAlB,GAA3B,CAAd;AACA,sBACI;AACI,IAAA,QAAQ,EAAE,CADd;AAEI,IAAA,SAAS,EAAC,uBAFd,CAGI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZJ;AAAA,4BAcI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAAxC;AAAiE,MAAA,GAAG,EAAED,IAAtE;AAA4E,MAAA,GAAG,EAAC;AAAhF;AAAA;AAAA;AAAA;AAAA,YAdJ,eAeI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACC,QAAAA,aAAa,EAAE;AAAhB,OAA1C;AAAA,gBAAoEC,IAAI,CAACH;AAAzE;AAAA;AAAA;AAAA;AAAA,YAfJ,eAgBI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACE,QAAAA,aAAa,EAAE;AAAhB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAhBJ,eAiBI;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAmC,MAAA,KAAK,EAAE;AAACA,QAAAA,aAAa,EAAE;AAAhB;AAA1C;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAzBD;;KAAMJ,W;AA2BN,eAAeA,WAAf","sourcesContent":["import React from 'react'\n\nconst LoadingFile = () => {\n    const files = [{name: '1', type: 'dir'}, {name: '2', type: 'png'}];\n    return (\n        <div\n            tabIndex={1}\n            className='LoadingFile-container'\n            // onFocus={(e) => focusHandler(e, file)}\n            // onBlur={(e) => blurHandler(e)}\n            // onContextMenu={e => contextMenuHandler(e)}\n            // onDoubleClick={() => doubleClickHandler(file)}\n            // onDragStart={e => dragStartHandler(e, file)}\n            // onDragLeave={e => dragLeaveHandler(e)}\n            // onDragEnd={e => dragEndHandler(e)}\n            // onDragOver={e => dragOverHandler(e, file)}\n            // onDrop={e => dropHandler(e, file)}\n            // draggable={true}\n        >\n            <img className='LoadingFile-img' style={{pointerEvents: 'none'}} src={type} alt='' />\n            <span className='LoadingFile-name' style={{pointerEvents: 'none'}}>{file.name}</span>\n            <span className='LoadingFile-date' style={{pointerEvents: 'none'}}></span>\n            <span className='LoadingFile-size' style={{pointerEvents: 'none'}}>{\n                // file.size === 0 ? 'â€”' : sizeFormat(file.size)\n            }</span>\n        </div>\n    )\n}\n\nexport default LoadingFile;"]},"metadata":{},"sourceType":"module"}