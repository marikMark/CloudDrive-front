{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { updateFilePath } from '../../../../actions/file';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = ({\n  file\n}) => {\n  _s();\n\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'jpg' ? picture : file.type === 'jpeg' ? picture : file.type === 'zip' ? zipFile : file.type === 'mp3' ? mp3 : txtFile;\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const draggingFile = useSelector(state => state.files.draggingFile);\n\n  function openDirHandler(file) {\n    if (file.type === 'dir') {\n      dispatch(pushToStack(currentDir));\n      dispatch(setCurrentDir(file._id));\n    } // localStorage.setItem('currentDirId', file._id);\n\n  }\n\n  const focusHandler = e => {\n    e.target.style.background = '#f0f0f0';\n  };\n\n  const blurHandler = e => {\n    e.preventDefault();\n    e.target.style.background = 'white';\n  };\n\n  const dragStartHandler = (e, file) => {\n    dispatch(setDraggingFile(file));\n  };\n\n  const dragLeaveHandler = e => {\n    e.target.style.background = 'white';\n  };\n\n  const dragEndHandler = e => {\n    e.target.style.background = 'white';\n  };\n\n  const dragOverHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      e.target.style.background = '#f0f0f0';\n    }\n  };\n\n  const dropHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      dispatch(updateFilePath(draggingFile, file));\n      dispatch(setDraggingFile(null));\n      dispatch(removeFromFiles(draggingFile));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"File-container\",\n    onClick: e => clickHandler(e),\n    onBlur: e => blurHandler(e),\n    onDoubleClick: () => openDirHandler(file),\n    onDragStart: e => dragStartHandler(e, file),\n    onDragLeave: e => dragLeaveHandler(e),\n    onDragEnd: e => dragEndHandler(e),\n    onDragOver: e => dragOverHandler(e, file),\n    onDrop: e => dropHandler(e, file),\n    draggable: true,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"File-img\",\n      src: type,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-name\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-date\",\n      children: file.updatedAt.split('T')[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-size\",\n      children: file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"oSE/XzgLocUjagACXxj3dBaO/I4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","txtFile","mp3","useDispatch","useSelector","useState","setCurrentDir","pushToStack","setDraggingFile","removeFromFiles","updateFilePath","File","file","type","dispatch","currentDir","state","files","draggingFile","openDirHandler","_id","focusHandler","e","target","style","background","blurHandler","preventDefault","dragStartHandler","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","clickHandler","name","updatedAt","split","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { updateFilePath } from '../../../../actions/file';\n\nconst File = ({file}) => {\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'jpg' ? picture :\n                file.type === 'jpeg' ? picture :\n                file.type === 'zip' ? zipFile :\n                file.type === 'mp3' ? mp3 :\n                txtFile;\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    const draggingFile = useSelector(state => state.files.draggingFile);\n    function openDirHandler(file) {\n        if(file.type === 'dir') {\n            dispatch(pushToStack(currentDir));\n            dispatch(setCurrentDir(file._id));\n        }\n        // localStorage.setItem('currentDirId', file._id);\n    }\n    const focusHandler = e => {\n        e.target.style.background = '#f0f0f0';\n    }\n    const blurHandler = e => {\n        e.preventDefault();\n        e.target.style.background = 'white';\n    }\n    const dragStartHandler = (e, file) => {\n        dispatch(setDraggingFile(file));\n    }\n    const dragLeaveHandler = e => {\n        e.target.style.background = 'white';\n    }\n    const dragEndHandler = e => {\n        e.target.style.background = 'white';\n    }\n    const dragOverHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            e.target.style.background = '#f0f0f0';\n        }\n    }\n    const dropHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            dispatch(updateFilePath(draggingFile, file));\n            dispatch(setDraggingFile(null));\n            dispatch(removeFromFiles(draggingFile));\n        }\n    }\n    return (\n        <div\n            className='File-container'\n            onClick={(e) => clickHandler(e)}\n            onBlur={(e) => blurHandler(e)}\n            onDoubleClick={() => openDirHandler(file)}\n            onDragStart={(e) => dragStartHandler(e, file)}\n            onDragLeave={(e) => dragLeaveHandler(e)}\n            onDragEnd={(e) => dragEndHandler(e)}\n            onDragOver={(e) => dragOverHandler(e, file)}\n            onDrop={(e) => dropHandler(e, file)}\n            draggable={true}\n        >\n            {/* <div className='File-section'></div> */}\n            <img className='File-img' src={type} alt='' />\n            <span className='File-name'>{file.name}</span>\n            <span className='File-date'>{file.updatedAt.split('T')[0]}</span>\n            <span className='File-size'>{file.size}</span>\n        </div>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}