{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { getFiles, updateFilePath } from '../../../../actions/file';\nimport Dropdown from './Dropdown';\nimport Popup from './Popup';\nimport { sizeFormat } from '../../../../utils/sizeFormat';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst File = props => {\n  _s();\n\n  const file = props.file;\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'jpg' ? picture : file.type === 'jpeg' ? picture : file.type === 'zip' ? zipFile : file.type === 'mp3' ? mp3 : txtFile;\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n  const draggingFile = useSelector(state => state.files.draggingFile);\n\n  function openDirHandler(file) {\n    if (file.type === 'dir') {\n      dispatch(pushToStack(currentDir));\n      dispatch(setCurrentDir(file._id));\n    } // localStorage.setItem('currentDirId', file._id);\n\n  }\n\n  const focusHandler = (e, file) => {\n    e.target.className = 'File-container-hover';\n    e.target.addEventListener('keydown', e => {\n      if (e.keyCode === 13) {\n        openDirHandler(file);\n      }\n    });\n  };\n\n  const blurHandler = e => {\n    e.target.className = 'File-container';\n    setOpacity(0);\n    setDropDown(false);\n  };\n\n  const [dropDown, setDropDown] = useState(false);\n  const [X, setX] = useState(),\n        [Y, setY] = useState();\n  const [opacity, setOpacity] = useState(0);\n\n  const contextMenuHandler = e => {\n    e.preventDefault();\n    setDropDown(true);\n    setX(e.offsetX);\n    setY(e.offsetY);\n    console.log(X, Y);\n    var op = 0;\n    setTimeout(function func() {\n      if (op > 1) return;\n      setOpacity(op);\n      op += 0.5;\n      setTimeout(func, 60);\n    }, 60);\n  };\n\n  const dragStartHandler = (e, file) => {\n    dispatch(setDraggingFile(file));\n    props.getFile(file);\n  };\n\n  const dragLeaveHandler = e => {\n    e.target.className = 'File-container';\n  };\n\n  const dragEndHandler = e => {\n    e.target.className = 'File-container';\n  };\n\n  const dragOverHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      e.target.className = 'File-container-hover';\n    }\n  };\n\n  const dropHandler = (e, file) => {\n    e.preventDefault();\n\n    if (file.type === 'dir') {\n      dispatch(updateFilePath(draggingFile, file));\n      dispatch(setDraggingFile(null)); // dispatch(getFiles(currentDir));\n\n      e.target.className = 'File-container';\n    } // if(file.type === 'dir' && draggingFile.type === 'dir') {\n    //     await dispatch(updateFolderPath(draggingFile, file));\n    //     await dispatch(setDraggingFile(null));\n    //     e.target.className = 'File-container';\n    // }\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: 1,\n      className: \"File-container\",\n      onFocus: e => focusHandler(e, file),\n      onBlur: e => blurHandler(e),\n      onContextMenu: e => contextMenuHandler(e),\n      onDoubleClick: () => openDirHandler(file),\n      onDragStart: e => dragStartHandler(e, file),\n      onDragLeave: e => dragLeaveHandler(e),\n      onDragEnd: e => dragEndHandler(e),\n      onDragOver: e => dragOverHandler(e, file),\n      onDrop: e => dropHandler(e, file),\n      draggable: true,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"File-img\",\n        style: {\n          pointerEvents: 'none'\n        },\n        src: type,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"File-name\",\n        style: {\n          pointerEvents: 'none'\n        },\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"File-date\",\n        style: {\n          pointerEvents: 'none'\n        },\n        children: file.updatedAt.split('T')[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"File-size\",\n        style: {\n          pointerEvents: 'none'\n        },\n        children: file.size === 0 ? 'â€”' : sizeFormat(file.size)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), dropDown && /*#__PURE__*/_jsxDEV(Dropdown, {\n        X: X,\n        Y: Y,\n        opacity: opacity,\n        file: file\n      }, file.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Popup, {\n      file: file,\n      id: file.id\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(File, \"rE66CWQgj9Tp6NRUoAwHKC97x9Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","txtFile","mp3","useDispatch","useSelector","useState","setCurrentDir","pushToStack","setDraggingFile","removeFromFiles","getFiles","updateFilePath","Dropdown","Popup","sizeFormat","File","props","file","type","dispatch","currentDir","state","files","draggingFile","openDirHandler","_id","focusHandler","e","target","className","addEventListener","keyCode","blurHandler","setOpacity","setDropDown","dropDown","X","setX","Y","setY","opacity","contextMenuHandler","preventDefault","offsetX","offsetY","console","log","op","setTimeout","func","dragStartHandler","getFile","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","pointerEvents","name","updatedAt","split","size","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport txtFile from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { setCurrentDir, pushToStack, setDraggingFile, removeFromFiles } from '../../../../reducers/fileReducer';\nimport { getFiles, updateFilePath } from '../../../../actions/file';\nimport Dropdown from './Dropdown';\nimport Popup from './Popup';\nimport { sizeFormat } from '../../../../utils/sizeFormat';\n\nconst File = (props) => {\n    const file = props.file;\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'jpg' ? picture :\n                file.type === 'jpeg' ? picture :\n                file.type === 'zip' ? zipFile :\n                file.type === 'mp3' ? mp3 :\n                txtFile;\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    const draggingFile = useSelector(state => state.files.draggingFile);\n    function openDirHandler(file) {\n        if(file.type === 'dir') {\n            dispatch(pushToStack(currentDir));\n            dispatch(setCurrentDir(file._id));\n        }\n        // localStorage.setItem('currentDirId', file._id);\n    }\n    const focusHandler = (e, file) => {\n        e.target.className = 'File-container-hover';\n        e.target.addEventListener('keydown', e => {\n            if(e.keyCode === 13) {\n                openDirHandler(file);\n            }\n        })\n    }\n    const blurHandler = e => {\n        e.target.className = 'File-container';\n        setOpacity(0);\n        setDropDown(false);\n    }\n    const [dropDown, setDropDown] = useState(false);\n    const [X, setX] = useState(), [Y, setY] = useState();\n    const [opacity, setOpacity] = useState(0);\n    const contextMenuHandler = e => {\n        e.preventDefault();\n        setDropDown(true);\n        setX(e.offsetX);\n        setY(e.offsetY);\n        console.log(X, Y);\n        var op = 0;\n        setTimeout(function func() {\n            if (op > 1)\n                return;\n            setOpacity(op);\n            op += 0.5;\n            setTimeout(func, 60);\n        }, 60);\n    }\n    const dragStartHandler = (e, file) => {\n        dispatch(setDraggingFile(file));\n        props.getFile(file);\n    }\n    const dragLeaveHandler = e => {\n        e.target.className = 'File-container';\n    }\n    const dragEndHandler = e => {\n        e.target.className = 'File-container';\n    }\n    const dragOverHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            e.target.className = 'File-container-hover';\n        }\n    }\n    const dropHandler = (e, file) => {\n        e.preventDefault();\n        if(file.type === 'dir') {\n            dispatch(updateFilePath(draggingFile, file));\n            dispatch(setDraggingFile(null));\n            // dispatch(getFiles(currentDir));\n            e.target.className = 'File-container';\n        }\n        // if(file.type === 'dir' && draggingFile.type === 'dir') {\n        //     await dispatch(updateFolderPath(draggingFile, file));\n        //     await dispatch(setDraggingFile(null));\n        //     e.target.className = 'File-container';\n        // }\n    }\n    return (\n        <>\n            <div\n                tabIndex={1}\n                className='File-container'\n                onFocus={(e) => focusHandler(e, file)}\n                onBlur={(e) => blurHandler(e)}\n                onContextMenu={e => contextMenuHandler(e)}\n                onDoubleClick={() => openDirHandler(file)}\n                onDragStart={e => dragStartHandler(e, file)}\n                onDragLeave={e => dragLeaveHandler(e)}\n                onDragEnd={e => dragEndHandler(e)}\n                onDragOver={e => dragOverHandler(e, file)}\n                onDrop={e => dropHandler(e, file)}\n                draggable={true}\n            >\n                {/* <input id={file.id} style={{display: 'none'}} /> */}\n                {/* <div className='File-section'></div> */}\n                <img className='File-img' style={{pointerEvents: 'none'}} src={type} alt='' />\n                <span className='File-name' style={{pointerEvents: 'none'}}>{file.name}</span>\n                <span className='File-date' style={{pointerEvents: 'none'}}>{file.updatedAt.split('T')[0]}</span>\n                <span className='File-size' style={{pointerEvents: 'none'}}>{\n                    file.size === 0 ? 'â€”' : sizeFormat(file.size)\n                }</span>\n                {dropDown &&\n                    <Dropdown X={X} Y={Y} opacity={opacity} file={file} key={file.id} />\n                }\n            </div>\n            <Popup file={file} id={file.id} key={file.id} />\n        </>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}