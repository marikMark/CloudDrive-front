{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/FileList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport File from './file/File';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentDir, setDraggingFile } from '../../../reducers/fileReducer';\nimport './fileList.css';\nimport { updateFilePath } from '../../../actions/file';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileList = () => {\n  _s();\n\n  const files = useSelector(state => state.files.files);\n  const currentDir = useSelector(state => state.files.currentDir);\n  const dirStack = useSelector(state => state.files.dirStack);\n  const draggingFile = useSelector(state => state.files.draggingFile);\n  const dispatch = useDispatch();\n\n  function backClickHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setCurrentDir(backDirId));\n  }\n\n  const [dragFile, setDragFile] = useState();\n\n  const getFile = file => {\n    setDragFile(file);\n    console.log(draggingFile);\n  };\n\n  const backDropHandler = (e, draggingFile) => {\n    const backDirId = dirStack.pop();\n    console.log(draggingFile);\n    dispatch(updateFilePath(draggingFile, backDirId));\n    dispatch(setDraggingFile(null));\n    dispatch(setCurrentDir(backDirId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FileList-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FileList-header\",\n      children: [currentDir !== 'null' ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"FileList-back\",\n        title: \"Back\",\n        onClick: () => backClickHandler(),\n        onDrop: e => backDropHandler(e),\n        children: \"\\u2039\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-date\",\n        children: \"Last modified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-size\",\n        children: \"File size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), files.map(file => /*#__PURE__*/_jsxDEV(File, {\n      getFile: getFile,\n      file: file\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileList, \"S1LJCCq0F5OJcy+TWjXlkDUnnAs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = FileList;\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/FileList.js"],"names":["React","useState","File","useSelector","useDispatch","setCurrentDir","setDraggingFile","updateFilePath","FileList","files","state","currentDir","dirStack","draggingFile","dispatch","backClickHandler","backDirId","pop","dragFile","setDragFile","getFile","file","console","log","backDropHandler","e","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,+BAA/C;AACA,OAAO,gBAAP;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,KAAK,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;AACA,QAAME,UAAU,GAAGR,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYE,UAAtB,CAA9B;AACA,QAAMC,QAAQ,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYG,QAAtB,CAA5B;AACA,QAAMC,YAAY,GAAGV,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYI,YAAtB,CAAhC;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AACA,WAASW,gBAAT,GAA4B;AACxB,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,GAAT,EAAlB;AACAH,IAAAA,QAAQ,CAACT,aAAa,CAACW,SAAD,CAAd,CAAR;AACH;;AACD,QAAM,CAACE,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,EAAxC;;AACA,QAAMmB,OAAO,GAAGC,IAAI,IAAI;AACpBF,IAAAA,WAAW,CAACE,IAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACH,GAHD;;AAIA,QAAMW,eAAe,GAAG,CAACC,CAAD,EAAIZ,YAAJ,KAAqB;AACzC,UAAMG,SAAS,GAAGJ,QAAQ,CAACK,GAAT,EAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYV,YAAZ;AACAC,IAAAA,QAAQ,CAACP,cAAc,CAACM,YAAD,EAAeG,SAAf,CAAf,CAAR;AACAF,IAAAA,QAAQ,CAACR,eAAe,CAAC,IAAD,CAAhB,CAAR;AACAQ,IAAAA,QAAQ,CAACT,aAAa,CAACW,SAAD,CAAd,CAAR;AACH,GAND;;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,iBACKL,UAAU,KAAK,MAAf,gBACG;AACA,QAAA,SAAS,EAAC,eADV;AAEA,QAAA,KAAK,EAAC,MAFN;AAGA,QAAA,OAAO,EAAE,MAAMI,gBAAgB,EAH/B;AAIA,QAAA,MAAM,EAAEU,CAAC,IAAID,eAAe,CAACC,CAAD,CAJ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,GAOC,EARN,eASI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ,eAWI;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAeQhB,KAAK,CAACiB,GAAN,CAAUL,IAAI,iBACV,QAAC,IAAD;AACI,MAAA,OAAO,EAAED,OADb;AAEI,MAAA,IAAI,EAAEC;AAFV,OAGSA,IAAI,CAACM,EAHd;AAAA;AAAA;AAAA;AAAA,YADJ,CAfR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/CD;;GAAMnB,Q;UACYL,W,EACKA,W,EACFA,W,EACIA,W,EACJC,W;;;KALfI,Q;AAiDN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport File from './file/File';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentDir, setDraggingFile } from '../../../reducers/fileReducer';\nimport './fileList.css';\nimport { updateFilePath } from '../../../actions/file';\n\nconst FileList = () => {\n    const files = useSelector(state => state.files.files);\n    const currentDir = useSelector(state => state.files.currentDir);\n    const dirStack = useSelector(state => state.files.dirStack);\n    const draggingFile = useSelector(state => state.files.draggingFile);\n    const dispatch = useDispatch();\n    function backClickHandler() {\n        const backDirId = dirStack.pop();\n        dispatch(setCurrentDir(backDirId));\n    }\n    const [dragFile, setDragFile] = useState();\n    const getFile = file => {\n        setDragFile(file);\n        console.log(draggingFile);\n    }\n    const backDropHandler = (e, draggingFile) => {\n        const backDirId = dirStack.pop();\n        console.log(draggingFile);\n        dispatch(updateFilePath(draggingFile, backDirId));\n        dispatch(setDraggingFile(null));\n        dispatch(setCurrentDir(backDirId));\n    }\n    return (\n        <div className='FileList-container'>\n            <div className='FileList-header'>\n                {currentDir !== 'null' ?\n                    <button\n                    className='FileList-back'\n                    title='Back'\n                    onClick={() => backClickHandler()}\n                    onDrop={e => backDropHandler(e)}\n                    >â€¹</button>\n                : ''}\n                <span className='FileList-name'>Name</span>\n                <span className='FileList-date'>Last modified</span>\n                <span className='FileList-size'>File size</span>\n            </div>\n            {\n                files.map(file => \n                    <File\n                        getFile={getFile}\n                        file={file}\n                        key={file.id}\n                    />)\n            }\n        </div>\n    );\n};\n\nexport default FileList;"]},"metadata":{},"sourceType":"module"}