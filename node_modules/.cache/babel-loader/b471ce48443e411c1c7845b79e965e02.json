{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/FileList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport File from './file/File';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentDir, setDraggingFile } from '../../../reducers/fileReducer';\nimport './fileList.css';\nimport { updateFilePath, getFiles } from '../../../actions/file';\nimport LoadingFile from './loadingFile/LoadingFile';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileList = () => {\n  _s();\n\n  const files = useSelector(state => state.files.files);\n  const loadingFiles = useSelector(state => state.upload.files);\n  const currentDir = useSelector(state => state.files.currentDir);\n  const dirStack = useSelector(state => state.files.dirStack);\n  const dispatch = useDispatch();\n\n  function backClickHandler() {\n    const backDirId = dirStack.pop();\n    dispatch(setCurrentDir(backDirId));\n  }\n\n  const [dragFile, setDragFile] = useState();\n\n  const getFile = file => {\n    setDragFile(file);\n  };\n\n  const backDropHandler = async e => {\n    e.preventDefault();\n    const backDirId = {\n      _id: dirStack.pop()\n    };\n    await dispatch(updateFilePath(dragFile, backDirId));\n    dispatch(setDraggingFile(null));\n    dispatch(setCurrentDir(backDirId._id)); // dispatch(getFiles(currentDir));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FileList-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FileList-header\",\n      children: [currentDir !== 'null' ? /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"FileList-back\",\n          title: \"Back\",\n          onClick: () => backClickHandler(),\n          onDragOver: e => e.preventDefault(),\n          onDrop: e => backDropHandler(e),\n          children: \"\\u2039\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this) : '', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-date\",\n        children: \"Last modified\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"FileList-size\",\n        children: \"File size\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), files.map(file => /*#__PURE__*/_jsxDEV(File, {\n      getFile: getFile,\n      file: file\n    }, file.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 35\n    }, this)), loadingFiles.map(file => /*#__PURE__*/_jsxDEV(LoadingFile, {\n      file: file\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 42\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileList, \"qcR4ZW5ty5FOEu8RZYLXu4/qHos=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = FileList;\nexport default FileList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileList\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/FileList.js"],"names":["React","useState","useEffect","File","useSelector","useDispatch","setCurrentDir","setDraggingFile","updateFilePath","getFiles","LoadingFile","BrowserRouter","Router","Link","FileList","files","state","loadingFiles","upload","currentDir","dirStack","dispatch","backClickHandler","backDirId","pop","dragFile","setDragFile","getFile","file","backDropHandler","e","preventDefault","_id","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport File from './file/File';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCurrentDir, setDraggingFile } from '../../../reducers/fileReducer';\nimport './fileList.css';\nimport { updateFilePath, getFiles } from '../../../actions/file';\nimport LoadingFile from './loadingFile/LoadingFile';\nimport {\n    BrowserRouter as Router,\n    Link\n} from 'react-router-dom';\n\nconst FileList = () => {\n    const files = useSelector(state => state.files.files);\n    const loadingFiles = useSelector(state => state.upload.files);\n    const currentDir = useSelector(state => state.files.currentDir);\n    const dirStack = useSelector(state => state.files.dirStack);\n    const dispatch = useDispatch();\n    function backClickHandler() {\n        const backDirId = dirStack.pop();\n        dispatch(setCurrentDir(backDirId));\n    }\n    const [dragFile, setDragFile] = useState();\n    const getFile = file => {\n        setDragFile(file);\n    }\n    const backDropHandler = async e => {\n        e.preventDefault()\n        const backDirId = {\n            _id: dirStack.pop()\n        };\n        await dispatch(updateFilePath(dragFile, backDirId));\n        dispatch(setDraggingFile(null));\n        dispatch(setCurrentDir(backDirId._id));\n        // dispatch(getFiles(currentDir));\n    }\n    return (\n        <div className='FileList-container'>\n            <div className='FileList-header'>\n                {currentDir !== 'null' ?\n                    <Router>\n                        <button\n                        className='FileList-back'\n                        title='Back'\n                        onClick={() => backClickHandler()}\n                        onDragOver={e => e.preventDefault()}\n                        onDrop={e => backDropHandler(e)}\n                        >â€¹</button>\n                    </Router>\n                : ''}\n                <span className='FileList-name'>Name</span>\n                <span className='FileList-date'>Last modified</span>\n                <span className='FileList-size'>File size</span>\n            </div>\n            {\n                files.map(file => <File getFile={getFile} file={file} key={file.id} />)\n            }\n            {\n                loadingFiles.map(file => <LoadingFile file={file} />)\n            }\n        </div>\n    );\n};\n\nexport default FileList;"]},"metadata":{},"sourceType":"module"}