{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport filePng from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentDir, pushToStack } from '../../../../reducers/fileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = ({\n  file\n}) => {\n  _s();\n\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'zip' ? zipFile : file.type === 'mp3' ? mp3 : filePng;\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n\n  function openDirHandler(file) {\n    if (file.type === 'dir') {\n      dispatch(pushToStack(currentDir));\n      dispatch(setCurrentDir(file._id));\n    } // localStorage.setItem('currentDirId', file._id);\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"File-container\",\n    onDoubleClick: () => openDirHandler(file),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"File-img\",\n      src: type,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-name\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-date\",\n      children: file.updatedAt.split('T')[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-size\",\n      children: file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"YH1+1VQgoPmNSkl/ySjl2Cv0Sow=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","filePng","mp3","useDispatch","useSelector","setCurrentDir","pushToStack","File","file","type","dispatch","currentDir","state","files","openDirHandler","_id","name","updatedAt","split","size"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kCAA3C;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,QAAMC,IAAI,GACED,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBb,MAAtB,GACAY,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBZ,GAAtB,GACAW,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBX,GAAtB,GACAU,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBV,OAAtB,GACAS,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBT,OAAtB,GACAQ,IAAI,CAACC,IAAL,KAAc,KAAd,GAAsBP,GAAtB,GACAD,OAPZ;AAQA,QAAMS,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,UAAU,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,UAAtB,CAA9B;;AACA,WAASG,cAAT,CAAwBN,IAAxB,EAA8B;AAC1B,QAAGA,IAAI,CAACC,IAAL,KAAc,KAAjB,EAAwB;AACpBC,MAAAA,QAAQ,CAACJ,WAAW,CAACK,UAAD,CAAZ,CAAR;AACAD,MAAAA,QAAQ,CAACL,aAAa,CAACG,IAAI,CAACO,GAAN,CAAd,CAAR;AACH,KAJyB,CAK1B;;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,aAAa,EAAE,MAAMD,cAAc,CAACN,IAAD,CAAnE;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEC,IAA/B;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,EACmD,GADnD,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BD,IAAI,CAACQ;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAEmD,GAFnD,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,IAAI,CAACS,SAAL,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,EAGsE,GAHtE,eAII;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BV,IAAI,CAACW;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA1BD;;GAAMZ,I;UASeJ,W,EACEC,W;;;KAVjBG,I;AA4BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport filePng from '../../../../assets/file.png';\nimport mp3 from '../../../../assets/mp3.png'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentDir, pushToStack } from '../../../../reducers/fileReducer';\n\nconst File = ({file}) => {\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'zip' ? zipFile :\n                file.type === 'mp3' ? mp3 :\n                filePng;\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    function openDirHandler(file) {\n        if(file.type === 'dir') {\n            dispatch(pushToStack(currentDir));\n            dispatch(setCurrentDir(file._id));\n        }\n        // localStorage.setItem('currentDirId', file._id);\n    }\n    return (\n        <div className='File-container' onDoubleClick={() => openDirHandler(file)}>\n            <img className='File-img' src={type} alt='' />{' '}\n            <span className='File-name'>{file.name}</span>{' '}\n            <span className='File-date'>{file.updatedAt.split('T')[0]}</span>{' '}\n            <span className='File-size'>{file.size}</span>\n        </div>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}