{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport file from '../../../../assets/file.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentDir, pushToStack } from '../../../../reducers/fileReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst File = ({\n  file\n}) => {\n  _s();\n\n  const type = file.type === 'dir' ? folder : file.type === 'doc' ? doc : file.type === 'pdf' ? pdf : file.type === 'png' ? picture : file.type === 'zip' ? zipFile : file;\n  const dispatch = useDispatch();\n  const currentDir = useSelector(state => state.files.currentDir);\n\n  function openDirHandler() {\n    dispatch(pushToStack(currentDir));\n    dispatch(setCurrentDir(file._id)); // localStorage.setItem('currentDirId', file._id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"File-container\",\n    onClick: file.type === 'dir' ? () => openDirHandler() : '',\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"File-img\",\n      src: type,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-name\",\n      children: file.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-date\",\n      children: file.updatedAt.split('T')[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"File-size\",\n      children: file.size\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(File, \"YH1+1VQgoPmNSkl/ySjl2Cv0Sow=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = File;\nexport default File;\n\nvar _c;\n\n$RefreshReg$(_c, \"File\");","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/components/disk/fileList/file/File.js"],"names":["React","folder","doc","pdf","picture","zipFile","file","useDispatch","useSelector","setCurrentDir","pushToStack","File","type","dispatch","currentDir","state","files","openDirHandler","_id","name","updatedAt","split","size"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,GAAP,MAAgB,4BAAhB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,kCAA3C;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACL,EAAAA;AAAD,CAAD,KAAY;AAAA;;AACrB,QAAMM,IAAI,GACEN,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsBX,MAAtB,GACAK,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsBV,GAAtB,GACAI,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsBT,GAAtB,GACAG,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsBR,OAAtB,GACAE,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsBP,OAAtB,GACAC,IANZ;AAOA,QAAMO,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,UAAU,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYF,UAAtB,CAA9B;;AACA,WAASG,cAAT,GAA0B;AACtBJ,IAAAA,QAAQ,CAACH,WAAW,CAACI,UAAD,CAAZ,CAAR;AACAD,IAAAA,QAAQ,CAACJ,aAAa,CAACH,IAAI,CAACY,GAAN,CAAd,CAAR,CAFsB,CAGtB;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,OAAO,EAAEZ,IAAI,CAACM,IAAL,KAAc,KAAd,GAAsB,MAAMK,cAAc,EAA1C,GAA+C,EAAxF;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAEL,IAA/B;AAAqC,MAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,EACmD,GADnD,eAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BN,IAAI,CAACa;AAAlC;AAAA;AAAA;AAAA;AAAA,YAFJ,EAEmD,GAFnD,eAGI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6Bb,IAAI,CAACc,SAAL,CAAeC,KAAf,CAAqB,GAArB,EAA0B,CAA1B;AAA7B;AAAA;AAAA;AAAA;AAAA,YAHJ,EAGsE,GAHtE,eAII;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6Bf,IAAI,CAACgB;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAvBD;;GAAMX,I;UAQeJ,W,EACEC,W;;;KATjBG,I;AAyBN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport './file.css';\nimport folder from '../../../../assets/folder.png';\nimport doc from '../../../../assets/doc.png';\nimport pdf from '../../../../assets/pdf.png';\nimport picture from '../../../../assets/picture.png';\nimport zipFile from '../../../../assets/zip-file.png';\nimport file from '../../../../assets/file.png';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setCurrentDir, pushToStack } from '../../../../reducers/fileReducer';\n\nconst File = ({file}) => {\n    const type =\n                file.type === 'dir' ? folder :\n                file.type === 'doc' ? doc :\n                file.type === 'pdf' ? pdf :\n                file.type === 'png' ? picture :\n                file.type === 'zip' ? zipFile :\n                file;\n    const dispatch = useDispatch();\n    const currentDir = useSelector(state => state.files.currentDir);\n    function openDirHandler() {\n        dispatch(pushToStack(currentDir));\n        dispatch(setCurrentDir(file._id));\n        // localStorage.setItem('currentDirId', file._id);\n    }\n    return (\n        <div className='File-container' onClick={file.type === 'dir' ? () => openDirHandler() : ''}>\n            <img className='File-img' src={type} alt='' />{' '}\n            <span className='File-name'>{file.name}</span>{' '}\n            <span className='File-date'>{file.updatedAt.split('T')[0]}</span>{' '}\n            <span className='File-size'>{file.size}</span>\n        </div>\n    )\n}\n\nexport default File;"]},"metadata":{},"sourceType":"module"}