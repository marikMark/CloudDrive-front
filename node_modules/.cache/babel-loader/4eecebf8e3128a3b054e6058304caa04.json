{"ast":null,"code":"import axios from \"axios\";\nimport { addFile, setFiles } from \"../reducers/fileReducer\";\nexport function getFiles(dirId) {\n  return async dispatch => {\n    const res = await axios.get(`http://localhost:5000/api/drive/file/${dirId ? dirId : ''}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    dispatch(setFiles(res.data));\n  };\n}\nexport function createDir(dirId, dirName) {\n  return async dispatch => {\n    const res = await axios.post(`http://localhost:5000/api/drive/folder`, {\n      name: dirName,\n      parentId: dirId,\n      type: 'dir'\n    }, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    dispatch(addFile(res.data));\n    return res.data;\n  };\n}\nexport function uploadFile(dirId, file) {\n  return async dispatch => {\n    const data = new FormData();\n    data.append('file', file);\n    data.append('parentId', dirId);\n    const res = await axios.post('http://localhost:5000/api/drive/file', data, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      },\n      onUploadProgress: progressEvent => {\n        const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n        console.log(totalLength);\n\n        if (totalLength) {\n          let progress = Math.round(progressEvent.loaded * 100 / totalLength);\n          console.log(progress);\n        }\n      }\n    });\n    dispatch(addFile(res.data));\n  };\n}\nexport function updateFilePath(childFile, parentFile) {\n  return async dispatch => {\n    const data = {\n      childFile,\n      parentFile\n    };\n    const res = await axios.put('http://localhost:5000/api/drive/file', data, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  };\n}\nexport function removeFile(file) {\n  return async dispatch => {\n    const res = await axios.delete('http://localhost:5000/api/drive/file', file, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n    dispatch(removeFromFiles(file));\n  };\n}","map":{"version":3,"sources":["/Users/admin/Desktop/DataArt/CloudDrive/front/src/actions/file.js"],"names":["axios","addFile","setFiles","getFiles","dirId","dispatch","res","get","headers","Authorization","localStorage","getItem","data","createDir","dirName","post","name","parentId","type","uploadFile","file","FormData","append","onUploadProgress","progressEvent","totalLength","lengthComputable","total","target","getResponseHeader","console","log","progress","Math","round","loaded","updateFilePath","childFile","parentFile","put","removeFile","delete","removeFromFiles"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport { addFile, setFiles } from \"../reducers/fileReducer\";\n\nexport function getFiles(dirId) {\n    return async dispatch => {\n        const res = await axios.get(`http://localhost:5000/api/drive/file/${dirId ? dirId : ''}`, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n        dispatch(setFiles(res.data));\n    }\n}\n\nexport function createDir(dirId, dirName) {\n    return async dispatch => {\n        const res = await axios.post(`http://localhost:5000/api/drive/folder`, {\n            name: dirName,\n            parentId: dirId,\n            type: 'dir'\n        },\n        {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n        dispatch(addFile(res.data));\n        return res.data;\n    }\n}\n\nexport function uploadFile(dirId, file) {\n    return async dispatch => {\n        const data = new FormData();\n        data.append('file', file);\n        data.append('parentId', dirId);\n        const res = await axios.post('http://localhost:5000/api/drive/file', data, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            onUploadProgress: progressEvent => {\n                const totalLength = progressEvent.lengthComputable ? progressEvent.total : progressEvent.target.getResponseHeader('content-length') || progressEvent.target.getResponseHeader('x-decompressed-content-length');\n                console.log(totalLength)\n                if (totalLength) {\n                    let progress = Math.round((progressEvent.loaded * 100) / totalLength)\n                    console.log(progress)\n                }\n            }\n        });\n        dispatch(addFile(res.data));\n    }\n}\n\nexport function updateFilePath(childFile, parentFile) {\n    return async dispatch => {\n        const data = {\n            childFile,\n            parentFile\n        };\n        const res = await axios.put('http://localhost:5000/api/drive/file', data, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n    }\n}\n\nexport function removeFile(file) {\n    return async dispatch => {\n        const res = await axios.delete('http://localhost:5000/api/drive/file', file, {\n            headers: {\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n        });\n        dispatch(removeFromFiles(file));\n    }\n}"]},"metadata":{},"sourceType":"module"}